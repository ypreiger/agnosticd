---

- name: check if user is cluster admin
  shell: "oc get project default"
  register: default_project_result
  ignore_errors: true
  changed_when: false

- fail:
    msg: "User does not have cluster-admin rights to install software"
  when: default_project_result is failed

- name: define ocp_sso_project
  set_fact:
    sso_project: "sso-{{guid}}"

- name: define ocp_threescale_project
  set_fact:
    threescale_project: "threescale-{{guid}}"

- name: define ocp_service_project
  set_fact:
    service_project: "service-{{guid}}"

- name: define ocp_www_project
  set_fact:
    www_project: "www-{{guid}}"

- name: create a namespace for the rh-sso application
  k8s:
    state: present
    definition:
      apiVersion: project.openshift.io/v1
      kind: Project
      metadata:
        name: "{{sso_project}}"
        labels:
          AAD: "{guid}}"
  ignore_errors: true

- name: Make sure we go back do default project
  shell: "oc project default"

- name: Create service accounts and secrets for RH SSO
  shell: "oc create -f https://raw.githubusercontent.com/jboss-openshift/application-templates/master/secrets/sso-app-secret.json -n {{sso_project}}"

- name: Create service account
  shell: "oc create sa sso-service-account -n {{sso_project}}"

- name: Add cluster view policy to sa for clustering
  shell: "oc policy add-role-to-user view system:serviceaccount:{{sso_project}}:sso-service-account -n {{sso_project}}"

- name: Create RH SSO app
  shell: "oc new-app sso73-https -p HTTPS_NAME=jboss -p HTTPS_PASSWORD=mykeystorepass -p SSO_ADMIN_USERNAME=keyadmin \
  -p SSO_ADMIN_PASSWORD=keypassword -n {{sso_project}}"

- name: Create project for API Implementation
  shell: "oc new-project {{service_project}} --display-name='Alert Center Backend Service'"
  ignore_errors: true

- name: "Label namespace"
  command: "oc label namespace {{service_project}} AAD='{{guid}}'"

- name: Make sure we go back do default project
  shell: "oc project default"

- name: Create service backend API implementation
  shell: "oc process -f https://raw.githubusercontent.com/jbossdemocentral/3scale-security-oidc-demo/master/support/templates/accidentalert-backend-template.json \
  -p APP_NAME=accidentalert-backend -p GIT_REPO=https://github.com/jbossdemocentral/3scale-security-oidc-demo.git -p GIT_REF=master \
  -p CONTEXT_DIR=/projects/myaccidentalert -p ACTIVEMQ_BROKER_USERNAME=admin -p ACTIVEMQ_BROKER_PASSWORD=admin \
  -p IMAGE_STREAM_NAMESPACE={{service_project}} \
  -p CPU_REQUEST=1 -p MEMORY_REQUEST=512Mi -p MEMORY_LIMIT=1024Mi | oc create -n {{service_project}} -f -"

- name: Make sure we go back do default project
  shell: "oc project default"


- name: create a namespace for 3scale application
  k8s:
    state: present
    definition:
      apiVersion: project.openshift.io/v1
      kind: Project
      metadata:
        name: "{{threescale_project}}"
        labels:
          AAD: "{guid}}"
  ignore_errors: true

- name: Make sure we go back do default project
  shell: "oc project default"

- name: Create the 3scale app
  shell: "oc new-app -f https://raw.githubusercontent.com/jbossdemocentral/3scale-security-oidc-demo/{{threescale_version}}/support/templates/3scale-amp-template.yml \
  --param WILDCARD_DOMAIN={{guid}}.{{ocp_apps_domain}} --param ADMIN_PASSWORD=password \
  --param MASTER_PASSWORD=password -n {{threescale_project}}"

- name: Delete current imagestreams
  shell: "oc delete imagestream --all -n {{threescale_project}}"

- name: Create new imagestreams in openshift namespace
  shell: "oc apply -n openshift -f https://raw.githubusercontent.com/jbossdemocentral/3scale-security-oidc-demo/{{threescale_version}}/support/templates/3scale-image-streams.yml"

- name: Give ocp_username access to sso_project
  shell: "oc policy add-role-to-user admin {{ocp_username}} -n {{sso_project}}"

- name: Give ocp_username access to threescale_project
  shell: "oc policy add-role-to-user admin {{ocp_username}} -n {{threescale_project}}"

- name: Running Post config tasks
  import_tasks: ./config.yml
  become: false

- name: workload Tasks Complete
  debug:
    msg: workload Tasks Complete

